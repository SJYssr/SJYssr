name: 更新自述文件

on:
  schedule:
    - cron: "0 */12 * * *"  # 每12小时运行一次
  workflow_dispatch:  # 允许手动触发
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  generate:
    name: Generate Snake and Stats
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      # 生成蛇形动画
      - name: generate snake.svg
        uses: Platane/snk/svg-only@v3
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark

      # 推送蛇形动画到输出分支
      - name: push snake.svg to the output branch
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  generate-stats:
    name: Generate Commit Statistics
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyGithub python-dateutil

      - name: Generate commit statistics
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/generate-stats.py

      - name: Update README
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update commit statistics" || exit 0
          git push

  verify:
    name: 验证提交签名
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录
      
      - name: 设置 Python 环境
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          
      - name: 安装依赖项
        run: |
          python -m pip install --upgrade pip
          pip install requests pygithub
          
      - name: 调试信息
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Repository Owner: ${{ github.repository_owner }}"
          echo "Event Name: ${{ github.event_name }}"
          
      - name: 运行验证脚本
        env:
          GH_USER: ${{ github.repository_owner }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 signature-verifier.py || echo "验证脚本执行失败，但工作流继续运行"
        continue-on-error: true  # 即使验证失败也继续执行

  rerun-failed-jobs:
    name: 重试失败的任务
    runs-on: ubuntu-latest
    needs: [generate, verify, generate-stats]
    if: failure()
    steps:
      - name: 检查失败原因
        run: |
          echo "工作流失败，检查日志以获取详细信息"
          echo "失败的工作流ID: ${{ github.run_id }}"
          
      - name: 重新运行失败的工作流
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run rerun ${{ github.run_id }} --failed || echo "重试失败，请手动检查"
        continue-on-error: true  # 即使重试失败也继续执行